#!/bin/bash

# Build env-prepare scripts by merging source files
# This script merges scripts from the scripts/ directory into the dist/ directory

set -e

# Get project root directory
root=$(cd "$(dirname "$0")" || exit; dirname "$(pwd)")

main_dir="${root}/scripts"
output_dir="${root}/dist"

# Create output directory and clean old files
mkdir -p "$output_dir" && rm -rf "${output_dir:?}"/*

output_file=""

# Recursively merge script files
merge_script() {
  local script="$1"
  
  # Check if file exists
  if [[ ! -f "${main_dir}/$script" ]]; then
    echo "Warning: Cannot find file ${main_dir}/$script"
    return 1
  fi
  
  # Process file line by line
  while IFS= read -r line; do
    if [[ "$line" =~ ^source\ (.*) ]]; then
      # Handle source directive
      local sourced_file="${BASH_REMATCH[1]}"
      echo "# Import dependency: $sourced_file" >> "$output_file"
      merge_script "$sourced_file"
    elif [[ "$line" == "#!/bin/bash" ]]; then
      # Replace shebang with import comment
      echo "# import from $script" >> "$output_file"
    else
      # Copy other lines directly
      echo "$line" >> "$output_file"
    fi
  done < "${main_dir}/$script"
}

# Main build process
echo "Building environment scripts..."
echo "Source directory: $main_dir"
echo "Output directory: $output_dir"
echo ""

# Count processed files
processed_count=0

# Process all scripts in the scripts directory
for file in "$main_dir"/*; do
  # Skip non-existent files and files starting with underscore (utility functions)
  if [[ -f "$file" && "$(basename "$file")" != _* ]]; then
    script_name="$(basename "$file")"
    output_file="${output_dir}/$script_name"
    
    echo "Processing script: $script_name"
    
    # Add shebang to output file
    echo "#!/bin/bash" > "$output_file"
    echo "" >> "$output_file"
    echo "# This file is automatically generated by tools/build.sh" >> "$output_file"
    echo "# Source file: scripts/$script_name" >> "$output_file"
    echo "" >> "$output_file"
    
    # Merge script content
    if merge_script "$script_name"; then
      echo "  ✓ $script_name build successful"
      chmod +x "$output_file"
      processed_count=$((processed_count + 1))
    else
      echo "  ✗ $script_name build failed"
      rm -f "$output_file"
    fi
  fi
done

echo ""
if [[ $processed_count -gt 0 ]]; then
  echo "Build completed! Processed $processed_count script files"
  echo "Output files located at: $output_dir/"
else
  echo "No processable script files found"
  exit 1
fi
